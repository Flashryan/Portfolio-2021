{"ast":null,"code":"var _jsxFileName = \"/Users/ryandavies/portfoliotraversy/src/components/DigitalProjects.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport sanityClient from '../client.js';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { fetchDigital, fetchPrint, fetchUx, fetchMotion } from '../actions/projectActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Lightbox from \"react-awesome-lightbox\";\nimport \"react-awesome-lightbox/build/style.css\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport img01 from \"../images/image-1.jpeg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DigitalProjects({\n  showModal\n}) {\n  _s();\n\n  const options = {\n    buttons: {\n      backgroundColor: \"rgba(140, 94, 88, 0.8)\",\n      iconColor: \"rgba(241, 191, 152, 0.7)\"\n    },\n    settings: {\n      overlayColor: \"rgba(255, 237, 225, 1)\",\n      transitionSpeed: 1000,\n      transitionTimingFunction: \"linear\"\n    },\n    thumbnails: {\n      thumbnailsSize: [\"120px\", \"100px\"],\n      thumbnailsOpacity: 0.4\n    },\n    caption: {\n      captionColor: \"rgba(241, 191, 152, 1)\"\n    },\n    progressBar: {\n      size: \"4px\",\n      backgroundColor: \"rgba(255, 237, 225, 1)\",\n      fillColor: \"#AF9AB2\"\n    }\n  };\n  const [showDigital, setShowDigital] = useState(false);\n  const [postData, setPost] = useState(null);\n  useEffect(() => {\n    sanityClient.fetch(`*[_type == \"post\" && title match \"Digital\"]{\n        title,\n        slug,\n        \"name\": author->name,\n        tileDescription,\n        link\n        mainImage {\n            asset -> {\n            _id,\n            url,\n            },\n            alt\n        }\n    }`).then(data => setPost(data)).catch(console.error);\n  }, []);\n  let images = [{\n    url: `images[].asset->url`\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(SRLWrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"w-full\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"container mx-auto w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid md:grid-cols-2 lg:grid-cols-3 gap-8\",\n            children: postData && postData.map((post, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n              className: \"portfolioImage-individual\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \" h-64 leading-snug bg-white \",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block h-64 relative grid grid-cols-1\",\n                  style: {\n                    overflow: \"hidden\",\n                    cursor: \"pointer\"\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"absolute top-2 text-white text-lg text-center content-center align-middle ... font-header uppercase font-bold text-opacity-20 text-7xl tileTitle flex justify-center\",\n                    children: post.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-white font-header uppercase font-bold text-3xl flex text-center font-light my-12 flex justify-center leading-tight\",\n                    children: post.tileDescription\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: post.mainImage.asset.url,\n                    className: \"portfolioImage absolute top-0\",\n                    style: {\n                      display: \"block\",\n                      marginLeft: \"auto\",\n                      marginRight: \"auto\",\n                      width: \"100%\"\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 33\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 29\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(DigitalProjects, \"gRbvzM7nF2ChSiDvtho2STCrji0=\");\n\n_c = DigitalProjects;\n\nvar _c;\n\n$RefreshReg$(_c, \"DigitalProjects\");","map":{"version":3,"sources":["/Users/ryandavies/portfoliotraversy/src/components/DigitalProjects.js"],"names":["React","sanityClient","useEffect","useState","Link","fetchDigital","fetchPrint","fetchUx","fetchMotion","useDispatch","useSelector","Lightbox","SRLWrapper","img01","DigitalProjects","showModal","options","buttons","backgroundColor","iconColor","settings","overlayColor","transitionSpeed","transitionTimingFunction","thumbnails","thumbnailsSize","thumbnailsOpacity","caption","captionColor","progressBar","size","fillColor","showDigital","setShowDigital","postData","setPost","fetch","then","data","catch","console","error","images","url","map","post","index","overflow","cursor","title","tileDescription","mainImage","asset","display","marginLeft","marginRight","width"],"mappings":"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","sourcesContent":["import React from 'react'\nimport sanityClient from '../client.js';\nimport { useEffect, useState } from 'react';\nimport {Link} from 'react-router-dom';\nimport {fetchDigital, fetchPrint, fetchUx, fetchMotion} from '../actions/projectActions';\nimport {useDispatch, useSelector} from 'react-redux'\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Lightbox from \"react-awesome-lightbox\";\nimport \"react-awesome-lightbox/build/style.css\";\nimport { SRLWrapper } from \"simple-react-lightbox\";\nimport img01 from \"../images/image-1.jpeg\"\n\n\nexport default function DigitalProjects({showModal}) {\n\n    const options = {\n        buttons: {\n          backgroundColor: \"rgba(140, 94, 88, 0.8)\",\n          iconColor: \"rgba(241, 191, 152, 0.7)\"\n        },\n        settings: {\n          overlayColor: \"rgba(255, 237, 225, 1)\",\n          transitionSpeed: 1000,\n          transitionTimingFunction: \"linear\"\n        },\n        thumbnails: {\n          thumbnailsSize: [\"120px\", \"100px\"],\n          thumbnailsOpacity: 0.4\n        },\n        caption: {\n          captionColor: \"rgba(241, 191, 152, 1)\"\n        },\n        progressBar: {\n          size: \"4px\",\n          backgroundColor: \"rgba(255, 237, 225, 1)\",\n          fillColor: \"#AF9AB2\"\n        }\n      };\n\nconst [showDigital, setShowDigital] = useState(false)\n  \n    \nconst [postData, setPost] = useState(null)\nuseEffect(() => {\n    sanityClient\n    .fetch(`*[_type == \"post\" && title match \"Digital\"]{\n        title,\n        slug,\n        \"name\": author->name,\n        tileDescription,\n        link\n        mainImage {\n            asset -> {\n            _id,\n            url,\n            },\n            alt\n        }\n    }`)\n    .then((data) => setPost(data))\n    .catch(console.error);\n}, [])\nlet images = [{\n    url: `images[].asset->url`\n}]\n    return (\n        <>\n        <SRLWrapper>\n        <main className='w-full'>\n\n            <section className=\"container mx-auto w-full\" >\n            \n                {<div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-8\" >\n                \n                    {postData && postData.map((post, index) => ( \n                    <article className=\"portfolioImage-individual\">\n                                                <span\n                         className=\" h-64 leading-snug bg-white \" key={index}\n                        >\n                            <div className=\"block h-64 relative grid grid-cols-1\" key={index} style={{overflow: \"hidden\", cursor: \"pointer\"}}>\n                            <span className={\"absolute top-2 text-white text-lg text-center content-center align-middle ... font-header uppercase font-bold text-opacity-20 text-7xl tileTitle flex justify-center\"}>\n                            {post.title}\n                            </span>\n                            <span className=\"text-white font-header uppercase font-bold text-3xl flex text-center font-light my-12 flex justify-center leading-tight\">\n                            {post.tileDescription}\n                            </span>\n                                <img src={post.mainImage.asset.url} className=\"portfolioImage absolute top-0\" style={{display: \"block\", marginLeft: \"auto\", marginRight:\"auto\", width:\"100%\" }} />\n                            </div>\n                        {/* </Link> */}\n                        </span>\n                    </article>\n                    ))}\n                </div>}\n                \n            </section>\n        </main>\n        </SRLWrapper>\n    </>\n    )\n}"]},"metadata":{},"sourceType":"module"}